{"version":3,"sources":["common/constants.js","common/reducers.js","reportWebVitals.js","components/card/Card.js","components/card-list/CardList.js","components/search-box/SearchBox.js","components/scroll-box/ScrollBox.js","common/actions.js","common/api.js","components/app-container/App.js","index.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_KOTOS_PENDING","REQUEST_KOTOS_SUCCESS","REQUEST_KOTOS_FAILED","initialStateSearch","searchField","initialStateKotos","isPending","kotos","error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","CardList","map","koto","SearchBox","searchChange","type","placeholder","onChange","ScrollBox","props","children","requestKotos","dispatch","link","fetch","response","json","data","payload","catch","App","this","onRequestKotos","kotosArray","onSearchChange","filteredKotos","filter","toLowerCase","includes","Component","connect","state","searchKotos","event","text","target","value","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16a06e56.chunk.js","sourcesContent":["export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\r\nexport const REQUEST_KOTOS_PENDING = \"REQUEST_KOTOS_PENDING\";\r\nexport const REQUEST_KOTOS_SUCCESS = \"REQUEST_KOTOS_SUCCESS\";\r\nexport const REQUEST_KOTOS_FAILED = \"REQUEST_KOTOS_FAILED\";\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_KOTOS_PENDING,\r\n  REQUEST_KOTOS_SUCCESS,\r\n  REQUEST_KOTOS_FAILED,\r\n} from \"./constants.js\";\r\n\r\nconst initialStateSearch = {\r\n  searchField: \"\",\r\n};\r\n\r\nexport const searchKotos = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return { ...state, searchField: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateKotos = {\r\n  isPending: false,\r\n  kotos: [],\r\n  error: \"\",\r\n};\r\n\r\nexport const requestKotos = (state = initialStateKotos, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_KOTOS_PENDING:\r\n      return { ...state, isPending: true };\r\n    case REQUEST_KOTOS_SUCCESS:\r\n      return { ...state, kotos: action.payload, isPending: false };\r\n    case REQUEST_KOTOS_FAILED:\r\n      return { ...state, error: action.payload, isPending: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport \"./card.css\";\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img src={`https://robohash.org/${id}.png?set=set4`} alt={`${name}-${id}`}></img>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../card/Card\";\r\n\r\nconst CardList = ({ kotos }) => {\r\n  return (\r\n    <div>\r\n      {kotos.map((koto) => {\r\n        return (\r\n          <Card\r\n            key={koto.id}\r\n            id={koto.id}\r\n            name={koto.name}\r\n            email={koto.email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue br2\"\r\n        type=\"search\"\r\n        placeholder=\"search koto\"\r\n        onChange={searchChange}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport \"./scrollBox.css\";\r\n\r\nconst ScrollBox = (props) => {\r\n  return <div className=\"scroll-box\">{props.children}</div>;\r\n};\r\n\r\nexport default ScrollBox;\r\n","import { apiCall } from \"./api\";\r\nimport {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_KOTOS_PENDING,\r\n  REQUEST_KOTOS_SUCCESS,\r\n  REQUEST_KOTOS_FAILED,\r\n} from \"./constants.js\";\r\n\r\nexport const setSearchField = (text) => {\r\n  return {\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const requestKotos = () => (dispatch) => {\r\n  dispatch({ type: REQUEST_KOTOS_PENDING });\r\n  apiCall(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then((data) => dispatch({ type: REQUEST_KOTOS_SUCCESS, payload: data }))\r\n    .catch((error) => dispatch({ type: REQUEST_KOTOS_FAILED, payload: error }));\r\n};\r\n","export const apiCall = (link) =>\r\n  fetch(link).then((response) => response.json());\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../card-list/CardList\";\r\nimport SearchBox from \"../search-box/SearchBox\";\r\nimport Scroll from \"../scroll-box/ScrollBox\";\r\nimport \"./App.css\";\r\nimport { setSearchField, requestKotos } from \"../../common/actions.js\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchKotos.searchField,\r\n    kotosArray: state.requestKotos.kotos,\r\n    isPending: state.requestKotos.isPending,\r\n    error: state.requestKotos.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestKotos: () => dispatch(requestKotos()),\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onRequestKotos();\r\n  }\r\n\r\n  render() {\r\n    const { kotosArray, searchField, onSearchChange, isPending } = this.props;\r\n    const filteredKotos = kotosArray.filter((koto) => {\r\n      return koto.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n\r\n    if (isPending) {\r\n      return <h1 className=\"tc\">Loading</h1>;\r\n    } else {\r\n      return (\r\n        <div className=\"app tc\">\r\n          <h1 className=\"f1\">kotofriends</h1>\r\n          <SearchBox searchChange={onSearchChange} />\r\n          <Scroll>\r\n            <CardList kotos={filteredKotos} />\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { createLogger } from \"redux-logger\"; // Middleware\r\nimport { searchKotos, requestKotos } from \"./common/reducers\";\r\nimport thunkMiddleware from \"redux-thunk\"; // Middleware\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport App from \"./components/app-container/App\";\r\nimport \"./index.css\";\r\nimport \"tachyons\";\r\n\r\nconst logger = createLogger();\r\nconst rootReducer = combineReducers({ requestKotos, searchKotos });\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunkMiddleware, logger)\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}